---
# tasks file for osp.servers
#- name: Create new server instances and attaches them a network and passes metadata to the instance
#  os_server:
#    cloud: openstack
#    name: "{{ instance_name }}"
#    image: rhel-guest
#    meta: "group={{ group }},deployment_name={{ deployment }}"
#    flavor: m2.small
#    security_groups: "{{ security_group_name }}"
#    key_name: ansible_ssh
#    wait: yes
#    nics:
#    - net-name: int_network
#    userdata: |
#      #!/bin/bash
#      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
#      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
#      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
#      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
#  register: instanceip
#
#- name: Add floating IP to Servers
#  os_floating_ip:
#    cloud: openstack
#    state: present
#    reuse: yes
#    server: "{{ instance_name }}"
#    network: ext_network
#    wait: true
#    timeout: 180
#  register: instancefloatingip
#- name: Show "{{ instanceip }}" public IP
#  debug: var=instancefloatingip.floating_ip.floating_ip_address
#
#- name: Wait for server to be available
#  wait_for:
#    host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
#    port: 22
#    search_regex: OpenSSH
#    timeout: 600
#  delegate_to: "{{ inventory_hostname }}"

- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: openstack
    name: "{{ item.key }}"
    image: rhel-guest
    meta: "{{ item.value.meta }}"
    flavor: m1.medium
    security_groups: "{{ item.value.security_group }}"
    key_name: ansible_ssh
    wait: yes
    nics:
    - net-name: int_network
    userdata: |
      #cloud-config
      ssh_pwauth: True
      chpasswd:
        list: |
          root:redhat
          cloud-user:redhat
        expire: False
      yum_repos:
        rhel-7-server-rpms:
          name: Red Hat Enterprise Linux 7
          baseurl: http://admin.na.shared.opentlc.com/repos/ocp/3.6//rhel-7-server-rpms
          enabled: 1
          gpgcheck: 0
        rhel-7-server-rh-common-rpms:
          name: Red Hat Enterprise Linux 7 Common
          baseurl: http://admin.na.shared.opentlc.com/repos/ocp/3.6//rhel-7-server-rh-common-rpms
          enabled: 1
          gpgcheck: 0
        rhel-7-server-extras-rpms:
          name: Red Hat Enterprise Linux 7 Extras
          baseurl: http://admin.na.shared.opentlc.com/repos/ocp/3.6//rhel-7-server-extras-rpms
          enabled: 1
          gpgcheck: 0
        rhel-7-server-optional-rpms:
          name: Red Hat Enterprise Linux 7 Optional
          baseurl: http://admin.na.shared.opentlc.com/repos/ocp/3.6//rhel-7-server-optional-rpms
          enabled: 1
          gpgcheck: 0
  register: instanceip
  with_dict: "{{ osp_servers }}"

#- name: Print Metadata
#  debug:
#    var: item.value.meta
#  with_dict: "{{ osp_servers }}"


- name: Add floating IP to Servers
  os_floating_ip:
    cloud: openstack
    state: present
    reuse: yes
    server: "{{ item.key }}"
    network: ext_network
    wait: true
    timeout: 180
  register: instancefloatingip
  with_dict: "{{ osp_servers }}"

- name: Show public IP
  debug:
    var: item.floating_ip.floating_ip_address
  loop: "{{ instancefloatingip.results }}"

#- name: Show "{{ instanceip }}" public IP
#  debug: var=instancefloatingip.floating_ip.floating_ip_address

- name: Wait for server to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  loop: "{{ instancefloatingip.results }}"
  delegate_to: "{{ inventory_hostname }}"
